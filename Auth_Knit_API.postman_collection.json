{
  "info": {
    "name": "Auth Knit API",
    "description": "Complete API collection for Auth Knit MERN stack application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5001/api",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "todoId",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user account"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('token', response.token);",
                  "    pm.collectionVariables.set('userId', response.user._id);",
                  "    console.log('Token saved:', response.token);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Authenticate user and return JWT token"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('token', response.token);",
                  "    pm.collectionVariables.set('userId', response.user._id);",
                  "    console.log('Token saved:', response.token);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Google OAuth",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/google",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "google"]
            },
            "description": "Initiate Google OAuth flow"
          }
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "me"]
            },
            "description": "Get current authenticated user information"
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Smith\",\n  \"email\": \"johnsmith@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            },
            "description": "Update user profile information"
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            },
            "description": "Logout user and clear authentication"
          }
        }
      ]
    },
    {
      "name": "Todos",
      "item": [
        {
          "name": "Get All Todos",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/todos?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["todos"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get paginated list of todos for authenticated user"
          }
        },
        {
          "name": "Get Todos with Filters",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/todos?page=1&limit=10&completed=false&priority=high",
              "host": ["{{baseUrl}}"],
              "path": ["todos"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "completed",
                  "value": "false"
                },
                {
                  "key": "priority",
                  "value": "high"
                }
              ]
            },
            "description": "Get todos with filters applied"
          }
        },
        {
          "name": "Search Todos",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/todos/search?q=project&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["todos", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "project"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Search todos by title, description, or tags"
          }
        },
        {
          "name": "Get Single Todo",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/todos/{{todoId}}",
              "host": ["{{baseUrl}}"],
              "path": ["todos", "{{todoId}}"]
            },
            "description": "Get a specific todo by ID"
          }
        },
        {
          "name": "Create Todo",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Complete project\",\n  \"description\": \"Finish the MERN stack project\",\n  \"priority\": \"high\",\n  \"dueDate\": \"2023-12-31\",\n  \"tags\": [\"work\", \"urgent\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/todos",
              "host": ["{{baseUrl}}"],
              "path": ["todos"]
            },
            "description": "Create a new todo"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('todoId', response.todo._id);",
                  "    console.log('Todo ID saved:', response.todo._id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Todo",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated project title\",\n  \"description\": \"Updated description\",\n  \"completed\": true,\n  \"priority\": \"medium\",\n  \"dueDate\": \"2023-12-25\",\n  \"tags\": [\"work\", \"completed\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/todos/{{todoId}}",
              "host": ["{{baseUrl}}"],
              "path": ["todos", "{{todoId}}"]
            },
            "description": "Update an existing todo"
          }
        },
        {
          "name": "Toggle Todo Completion",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/todos/{{todoId}}/toggle",
              "host": ["{{baseUrl}}"],
              "path": ["todos", "{{todoId}}", "toggle"]
            },
            "description": "Toggle the completion status of a todo"
          }
        },
        {
          "name": "Delete Todo",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/todos/{{todoId}}",
              "host": ["{{baseUrl}}"],
              "path": ["todos", "{{todoId}}"]
            },
            "description": "Delete a todo"
          }
        }
      ]
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Server Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "Check if the server is running"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-set token from environment if available",
          "if (!pm.collectionVariables.get('token') && pm.environment.get('token')) {",
          "    pm.collectionVariables.set('token', pm.environment.get('token'));",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test to log response status",
          "console.log('Response Status:', pm.response.status);",
          "console.log('Response Time:', pm.response.responseTime + 'ms');"
        ]
      }
    }
  ]
}
